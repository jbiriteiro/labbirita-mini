<#
================================================================================
LabBirita Mini - Push Seguro Autom√°tico
Autor: Jos√© Biriteiro
Data: 23/10/2025
Descri√ß√£o:
- Remove .env do hist√≥rico e do stage
- Adiciona .env ao .gitignore
- Reescreve hist√≥rico para remover qualquer commit antigo do .env
- Commit limpo e push for√ßado para origin/main
- Pronto para ser usado antes de qualquer deploy
================================================================================
#>

Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

# Caminho do projeto
$localPath = Convert-Path "."

# Arquivo secreto
$secretFile = ".env"

Write-Host "`nüéØ Iniciando Push Seguro LabBirita Mini..." -ForegroundColor Magenta

# 1Ô∏è‚É£ Remove .env do Git (cache) e adiciona ao .gitignore
if (Test-Path $secretFile) {
    Write-Host "‚úÖ Removendo $secretFile do controle do Git..." -ForegroundColor Green
    git rm --cached $secretFile
    Write-Host "‚úÖ Adicionando $secretFile ao .gitignore..." -ForegroundColor Green
    if (-not (Select-String -Path ".gitignore" -Pattern "$secretFile" -Quiet)) {
        Add-Content .gitignore $secretFile
    }
    git add .gitignore
    git commit -m "Remove .env do Git e adiciona ao .gitignore" | Out-Null
}

# 2Ô∏è‚É£ Reescreve hist√≥rico para remover qualquer commit antigo do .env
Write-Host "‚ö° Reescrevendo hist√≥rico para remover .env de commits antigos..." -ForegroundColor Yellow
git filter-branch --force --index-filter "git rm --cached --ignore-unmatch $secretFile" --prune-empty --tag-name-filter cat -- --all

# 3Ô∏è‚É£ Commit limpo (sem arquivos secretos)
Write-Host "‚úÖ Commit limpo pronto..." -ForegroundColor Green

# 4Ô∏è‚É£ For√ßa push pro GitHub
Write-Host "üöÄ Enviando push for√ßado para origin/main..." -ForegroundColor Cyan
git push origin main --force

Write-Host "`nüéâ Push Seguro Conclu√≠do! Seu reposit√≥rio est√° limpo e pronto para deploy." -ForegroundColor Magenta